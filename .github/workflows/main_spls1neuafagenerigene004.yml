# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js project to Azure Function App - spls1neuafagenerigene004

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '16.x' # set this to the node version to use (supports 8.x, 10.x, 12.x)

jobs:
  build-and-deploy:
    runs-on: windows-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2

      - name: Update functions
        run: |
          echo "$( jq --arg path "../dist/checkcustomer.js"  '.scriptFile = $path' ./check-customer/function.json)" > ./check-customer/function.json
          echo "$( jq --arg path "../dist/businessprocess.js" '.scriptFile = $path' ./business-process/function.json)" > ./business-process/function.json
          echo "$( jq --arg path "../dist/businessprocessstart.js" '.scriptFile = $path ' ./business-process-start/function.json)" > ./business-process-start/function.json
          echo "$( jq --arg path "../dist/finalize.js" '.scriptFile = $path ' ./finalize/function.json)" > ./finalize/function.json
          echo "$( jq --arg path "../dist/getaccountno.js" '.scriptFile = $path' ./get-account-no/function.json)" > ./get-account-no/function.json
          echo "$( jq --arg path "../dist/internalqueue.js" '.scriptFile = $path' ./internal-queue/function.json)" > ./internal-queue/function.json
          echo "$( jq --arg path "../dist/main.js" '.scriptFile = $path' ./main/function.json)" > ./main/function.json
          echo "$( jq --arg path "../dist/marksendtodecision.js" '.scriptFile = $path' ./mark-send-to-decision/function.json)" > ./mark-send-to-decision/function.json
          echo "$( jq --arg path "../dist/processid.js" '.scriptFile = $path' ./process-id/function.json)" > ./process-id/function.json
          echo "$( jq --arg path "../dist/reject.js" '.scriptFile = $path' ./reject/function.json)" > ./reject/function.json
          echo "$( jq --arg path "../dist/rejectcustomerstatus.js" '.scriptFile = $path' ./reject-customer-status/function.json)" > ./reject-customer-status/function.json
      - name: Show functions
        run: | 
          cat ./check-customer/function.json
      - name: Setup Node ${{ env.NODE_VERSION }} Environment
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 'Resolve Project Dependencies Using Npm'
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          echo "Setting prod-func"
          npm install
          npm run build --if-present
          npx webpack
          rm -r -force node_modules
          rm -r -force src
          rm -r -force dist/business-process
          rm -r -force dist/business-process-start
          rm -r -force dist/check-customer
          rm -r -force dist/process-id
          rm -r -force dist/finalize
          rm -r -force dist/reject
          rm -r -force dist/mark-send-to-decision
          rm -r -force dist/reject-customer-status
          rm -r -force dist/get-account-no
          rm -r -force dist/main
          rm -r -force dist/src
          popd

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'spls1neuafagenerigene004'
          slot-name: 'Production'
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_FF0D62199EA3405FA1C81C2D1EB222D6 }}
